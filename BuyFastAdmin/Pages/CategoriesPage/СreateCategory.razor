@page "/add-category"
@using System.Net.Http.Headers
@using BuyFastDTO.RequestModels

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 border">
<EditForm Model="categoryModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>Добавить продукт</h3>
    <div>
        <label>Name:</label>
        <InputText @bind-Value="categoryModel.Name" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Add Category</button>
</EditForm>
</div>
</div>
@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    [Inject]
    private CustomAuthenticationStateProvider authenticationStateProvider { get; set; }
    private string? authToken;
    private CategoryRequest categoryModel = new();
    private string parentIdInput;
    private string message;

    private async Task HandleValidSubmit()
    {
        // Optional: Assign ParentCategoryId if provided
        Guid? parentId = null;
        if (Guid.TryParse(parentIdInput, out var parsedId))
        {
            parentId = parsedId;
        }

        var newCategory = new
        {
            Name = categoryModel.Name,
            ParentCategoryId = parentId
        };
        authToken = await authenticationStateProvider.GetToken();
        if (authToken != null)
        {
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", authToken);
            var response = await _httpClient.PostAsJsonAsync("api/categories", newCategory);
            if (response.IsSuccessStatusCode)
            {
                message = "Категория успешно добавлена.";
                categoryModel = new(); // reset form
                parentIdInput = string.Empty;
            }
            else
            {
                message = "Не удалось добавить категорию.";
            }
        }
        else
        {
            message = "Не удалось добавить.";
        }
    }
}
